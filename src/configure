#!/bin/sh
#
# Copyright (c) 2016 Mark Heily <mark@heily.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

TOPDIR="`pwd`/.."
export TOPDIR

. ../config.sub
. ../vars.sh

SUBDIRS="libjob jobd jobadm jobcfg jobctl"

check_header 'sys/limits.h'

check_header 'sys/event.h'
if [ $check_header_sys_event_h -eq 0 ] ; then
	echo "building a local copy of libkqueue.. "

	make_define 'kqueue_dir' "$TOPDIR/vendor/libkqueue-2.0.4"
	make_define 'kqueue_CFLAGS' "-I$kqueue_dir/include"
	make_define 'kqueue_LDADD' '$kqueue_dir/.libs/libkqueue.a -lpthread -lrt'
	make_define 'kqueue_DEPENDS' "$kqueue_dir/.libs/libkqueue.a"

	tar -C $TOPDIR/vendor -zxf $TOPDIR/vendor/libkqueue-2.0.4.tar.gz
	( set -x ; cd $kqueue_dir && test -e Makefile || ./configure )
	custom_target "$kqueue_dir/.libs/libkqueue.a" " " \
	    "make -C $kqueue_dir"
else
	make_define 'kqueue_CFLAGS' ''
	make_define 'kqueue_LDADD' ''
	make_define 'kqueue_DEPENDS' ''	
fi

# DEADWOOD: remove ucl from this project
#
#check_header 'ucl.h'
#if [ $check_header_ucl_h -eq 0 ] ; then
#	echo "building a local copy of libucl.. "
#
#	# KLUDGE: OpenBSD does not support -gstrict-dwarf
#	if [ `uname` = 'OpenBSD' ] ; then
#		dwarf_options="-gdwarf-2"
#	else
#		dwarf_options="-gdwarf-2 -gstrict-dwarf"
#	fi
#
#	ucldir="$TOPDIR/vendor/libucl-0.8.0"
#	make_define 'libucl_dir' "$ucldir"
#	make_define 'libucl_CFLAGS' "-I$libucl_dir/include"
#	make_define 'libucl_LDFLAGS' ""
#	make_define 'libucl_LDADD' "$libucl_dir/src/.libs/libucl.a"
#	make_define 'libucl_DEPENDS' "$libucl_dir/src/.libs/libucl.a"
#	tar -C $TOPDIR/vendor -zxf $TOPDIR/vendor/libucl-0.8.0.tar.gz
#	_savedir=`pwd`
#	set -x
#	cd $ucldir
#	test -e configure || autoreconf -fvi || err 'autogen failed'
#	test -e install-sh || libtoolize --force
#	test -e Makefile || CFLAGS="$dwarf_options -g -O2 -fPIC" ./configure || err 'configure failed'
#	set +x
#	cd $_savedir
#
#	custom_target "$libucl_dir/src/.libs/libucl.a" " " \
#		"cd $libucl_dir && make"
#
#else
#	# KLUDGE: assumes libucl is installed in /usr/local, like on FreeBSD
#	make_define 'libucl_CFLAGS' '-I /usr/local/include'
#	make_define 'libucl_LDFLAGS' '-L /usr/local/lib'
#	make_define 'libucl_LDADD' '-lucl'
#	make_define 'libucl_DEPENDS' ''	
#fi

make_define VENDOR_CXXFLAGS "-I${TOPDIR}/vendor $libucl_CFLAGS $kqueue_CFLAGS"
make_define VENDOR_LDFLAGS "$libucl_LDFLAGS $kqueue_LDFLAGS"
make_define VENDOR_LDADD "$libucl_LDADD $kqueue_LDADD"
make_define VENDOR_DEPENDS "$libucl_DEPENDS $kqueue_DEPENDS"

write_makefile
